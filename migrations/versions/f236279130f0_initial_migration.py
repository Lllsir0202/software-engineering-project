"""Initial migration

Revision ID: f236279130f0
Revises: 
Create Date: 2025-06-25 15:25:37.687443

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f236279130f0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fish_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('species', sa.String(length=50), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('length1', sa.Float(), nullable=True),
    sa.Column('length2', sa.Float(), nullable=True),
    sa.Column('length3', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('farm', sa.String(length=64), nullable=True),
    sa.Column('test', sa.String(length=64), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('water_quality',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('province', sa.String(length=50), nullable=True),
    sa.Column('basin', sa.String(length=100), nullable=True),
    sa.Column('site_name', sa.String(length=100), nullable=True),
    sa.Column('monitor_time', sa.DateTime(), nullable=True),
    sa.Column('water_quality_level', sa.String(length=20), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('ph', sa.Float(), nullable=True),
    sa.Column('dissolved_oxygen', sa.Float(), nullable=True),
    sa.Column('conductivity', sa.Float(), nullable=True),
    sa.Column('turbidity', sa.Float(), nullable=True),
    sa.Column('cod_mn', sa.Float(), nullable=True),
    sa.Column('ammonia_nitrogen', sa.Float(), nullable=True),
    sa.Column('total_phosphorus', sa.Float(), nullable=True),
    sa.Column('total_nitrogen', sa.Float(), nullable=True),
    sa.Column('chlorophyll', sa.Float(), nullable=True),
    sa.Column('algae_density', sa.String(length=100), nullable=True),
    sa.Column('site_status', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('water_quality', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_water_quality_monitor_time'), ['monitor_time'], unique=False)

    op.create_table('sensor_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('metric', sa.String(length=64), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sensor_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sensor_data_timestamp'), ['timestamp'], unique=False)

    op.create_table('warning_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.Column('metric', sa.String(length=64), nullable=False),
    sa.Column('min_value', sa.Float(), nullable=True),
    sa.Column('max_value', sa.Float(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('warning_configs')
    with op.batch_alter_table('sensor_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sensor_data_timestamp'))

    op.drop_table('sensor_data')
    with op.batch_alter_table('water_quality', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_water_quality_monitor_time'))

    op.drop_table('water_quality')
    op.drop_table('users')
    op.drop_table('sensors')
    op.drop_table('fish_profiles')
    # ### end Alembic commands ###
